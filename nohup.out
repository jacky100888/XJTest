[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--------------------------< [0;36mcom.example:demo[0;1m >--------------------------[m
[[1;34mINFO[m] [1mBuilding demo 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m>>> [0;32mspring-boot-maven-plugin:3.5.0:run[m [1m(default-cli)[0;1m > [0;1mtest-compile[m @ [36mdemo[0;1m >>>[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:resources[m [1m(default-resources)[m @ [36mdemo[0;1m ---[m
[[1;34mINFO[m] Copying 1 resource from src/main/resources to target/classes
[[1;34mINFO[m] Copying 0 resource from src/main/resources to target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.14.0:compile[m [1m(default-compile)[m @ [36mdemo[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:3.3.1:testResources[m [1m(default-testResources)[m @ [36mdemo[0;1m ---[m
[[1;34mINFO[m] skip non existing resourceDirectory /Users/jackylee/projectworkspace/XJTest/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.14.0:testCompile[m [1m(default-testCompile)[m @ [36mdemo[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date.
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m<<< [0;32mspring-boot-maven-plugin:3.5.0:run[m [1m(default-cli)[0;1m < [0;1mtest-compile[m @ [36mdemo[0;1m <<<[m
[[1;34mINFO[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:3.5.0:run[m [1m(default-cli)[m @ [36mdemo[0;1m ---[m
[[1;34mINFO[m] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.0)

2025-06-01T23:29:56.122+08:00  INFO 67990 --- [           main] com.example.demo.DemoApplication         : Starting DemoApplication using Java 21.0.6 with PID 67990 (/Users/jackylee/projectworkspace/XJTest/target/classes started by jackylee in /Users/jackylee/projectworkspace/XJTest)
2025-06-01T23:29:56.123+08:00 DEBUG 67990 --- [           main] com.example.demo.DemoApplication         : Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-01T23:29:56.123+08:00  INFO 67990 --- [           main] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: "default"
2025-06-01T23:29:56.380+08:00  INFO 67990 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-01T23:29:56.400+08:00  INFO 67990 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 3 JPA repository interfaces.
2025-06-01T23:29:56.601+08:00  INFO 67990 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-01T23:29:56.607+08:00  INFO 67990 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-01T23:29:56.607+08:00  INFO 67990 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-01T23:29:56.626+08:00  INFO 67990 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-01T23:29:56.626+08:00  INFO 67990 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 488 ms
2025-06-01T23:29:56.684+08:00  INFO 67990 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-01T23:29:56.705+08:00  INFO 67990 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-01T23:29:56.716+08:00  INFO 67990 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-01T23:29:56.812+08:00  INFO 67990 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-01T23:29:56.822+08:00  INFO 67990 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-01T23:29:56.888+08:00  INFO 67990 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-06-01T23:29:56.889+08:00  INFO 67990 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-01T23:29:56.898+08:00  WARN 67990 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-01T23:29:56.904+08:00  INFO 67990 --- [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-01T23:29:57.220+08:00  INFO 67990 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-01T23:29:57.237+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    create table members (
        id bigint generated by default as identity,
        created_at timestamp(6),
        email varchar(255),
        password varchar(255),
        phone varchar(255),
        updated_at timestamp(6),
        username varchar(255),
        primary key (id)
    )
Hibernate: 
    create table members (
        id bigint generated by default as identity,
        created_at timestamp(6),
        email varchar(255),
        password varchar(255),
        phone varchar(255),
        updated_at timestamp(6),
        username varchar(255),
        primary key (id)
    )
2025-06-01T23:29:57.240+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    create table order_items (
        id bigint generated by default as identity,
        price numeric(38,2),
        product_name varchar(255),
        quantity integer,
        order_id bigint,
        product_id bigint,
        primary key (id)
    )
Hibernate: 
    create table order_items (
        id bigint generated by default as identity,
        price numeric(38,2),
        product_name varchar(255),
        quantity integer,
        order_id bigint,
        product_id bigint,
        primary key (id)
    )
2025-06-01T23:29:57.240+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    create table orders (
        id bigint generated by default as identity,
        order_date timestamp(6),
        order_number varchar(255),
        status enum ('CANCELLED','DELIVERED','PENDING','PROCESSING','SHIPPED'),
        total_amount numeric(38,2),
        updated_at timestamp(6),
        member_id bigint,
        primary key (id)
    )
Hibernate: 
    create table orders (
        id bigint generated by default as identity,
        order_date timestamp(6),
        order_number varchar(255),
        status enum ('CANCELLED','DELIVERED','PENDING','PROCESSING','SHIPPED'),
        total_amount numeric(38,2),
        updated_at timestamp(6),
        member_id bigint,
        primary key (id)
    )
2025-06-01T23:29:57.241+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    create table products (
        id bigint generated by default as identity,
        created_at timestamp(6),
        description varchar(255),
        name varchar(255),
        price numeric(38,2),
        stock integer,
        updated_at timestamp(6),
        primary key (id)
    )
Hibernate: 
    create table products (
        id bigint generated by default as identity,
        created_at timestamp(6),
        description varchar(255),
        name varchar(255),
        price numeric(38,2),
        stock integer,
        updated_at timestamp(6),
        primary key (id)
    )
2025-06-01T23:29:57.241+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-01T23:29:57.243+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-06-01T23:29:57.244+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    alter table if exists orders 
       add constraint FK2vq7lo4gkknrmghj3rqpqqg6s 
       foreign key (member_id) 
       references members
Hibernate: 
    alter table if exists orders 
       add constraint FK2vq7lo4gkknrmghj3rqpqqg6s 
       foreign key (member_id) 
       references members
2025-06-01T23:29:57.245+08:00  INFO 67990 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-01T23:29:57.364+08:00  INFO 67990 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-01T23:29:57.693+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        members m1_0
Hibernate: 
    select
        count(*) 
    from
        members m1_0
2025-06-01T23:29:57.705+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.712+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.713+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Initialized member data
2025-06-01T23:29:57.714+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        products p1_0
Hibernate: 
    select
        count(*) 
    from
        products p1_0
2025-06-01T23:29:57.715+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.715+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.716+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.716+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.717+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Initialized product data
2025-06-01T23:29:57.717+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        members m1_0
Hibernate: 
    select
        count(*) 
    from
        members m1_0
2025-06-01T23:29:57.718+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        products p1_0
Hibernate: 
    select
        count(*) 
    from
        products p1_0
2025-06-01T23:29:57.738+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
2025-06-01T23:29:57.742+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
2025-06-01T23:29:57.743+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:29:57.744+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:29:57.744+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:29:57.745+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:29:57.745+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:29:57.748+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:29:57.748+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:29:57.749+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:29:57.752+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.753+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.754+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.756+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:29:57.757+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:29:57.759+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:29:57.759+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:29:57.759+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.760+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.760+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:29:57.761+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:29:57.761+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:29:57.761+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:29:57.762+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.762+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.762+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:29:57.763+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:29:57.763+08:00 DEBUG 67990 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Initialized order data
2025-06-01T23:29:57.816+08:00  WARN 67990 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-01T23:29:57.938+08:00  INFO 67990 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-06-01T23:29:57.968+08:00  INFO 67990 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-01T23:29:57.972+08:00  INFO 67990 --- [           main] com.example.demo.DemoApplication         : Started DemoApplication in 1.99 seconds (process running for 2.096)
2025-06-01T23:30:17.726+08:00  INFO 67990 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-01T23:30:17.726+08:00  INFO 67990 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-01T23:30:17.727+08:00  INFO 67990 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-06-01T23:30:17.744+08:00 DEBUG 67990 --- [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
2025-06-01T23:30:25.152+08:00 DEBUG 67990 --- [nio-8080-exec-2] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
2025-06-01T23:31:15.115+08:00 DEBUG 67990 --- [nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-06-01T23:31:15.132+08:00 DEBUG 67990 --- [nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:31:15.139+08:00 DEBUG 67990 --- [nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
2025-06-01T23:31:21.865+08:00 DEBUG 67990 --- [nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.id=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.id=?
2025-06-01T23:31:21.867+08:00 DEBUG 67990 --- [nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:31:21.868+08:00 DEBUG 67990 --- [nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
2025-06-01T23:37:08.765+08:00 DEBUG 67990 --- [nio-8080-exec-9] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
2025-06-01T23:37:11.376+08:00 DEBUG 67990 --- [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
2025-06-01T23:37:56.840+08:00 DEBUG 67990 --- [nio-8080-exec-7] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;31mBUILD FAILURE[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  10:49 min
[[1;34mINFO[m] Finished at: 2025-06-01T23:40:45+08:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;31mERROR[m] Failed to execute goal [32morg.springframework.boot:spring-boot-maven-plugin:3.5.0:run[m [1m(default-cli)[m on project [36mdemo[m: [1;31mProcess terminated with exit code: 137[m -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.0)

2025-06-01T23:56:43.909+08:00  INFO 82692 --- [           main] com.example.demo.DemoApplication         : Starting DemoApplication v0.0.1-SNAPSHOT using Java 21.0.6 with PID 82692 (/Users/jackylee/projectworkspace/XJTest/target/demo-0.0.1-SNAPSHOT.jar started by jackylee in /Users/jackylee/projectworkspace/XJTest)
2025-06-01T23:56:43.910+08:00 DEBUG 82692 --- [           main] com.example.demo.DemoApplication         : Running with Spring Boot v3.5.0, Spring v6.2.7
2025-06-01T23:56:43.910+08:00  INFO 82692 --- [           main] com.example.demo.DemoApplication         : No active profile set, falling back to 1 default profile: "default"
2025-06-01T23:56:44.274+08:00  INFO 82692 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-01T23:56:44.296+08:00  INFO 82692 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18 ms. Found 3 JPA repository interfaces.
2025-06-01T23:56:44.539+08:00  INFO 82692 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-06-01T23:56:44.545+08:00  INFO 82692 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-01T23:56:44.545+08:00  INFO 82692 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-06-01T23:56:44.558+08:00  INFO 82692 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-01T23:56:44.558+08:00  INFO 82692 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 629 ms
2025-06-01T23:56:44.627+08:00  INFO 82692 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-01T23:56:44.646+08:00  INFO 82692 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.15.Final
2025-06-01T23:56:44.659+08:00  INFO 82692 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-06-01T23:56:44.753+08:00  INFO 82692 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-01T23:56:44.764+08:00  INFO 82692 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-01T23:56:44.838+08:00  INFO 82692 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-06-01T23:56:44.839+08:00  INFO 82692 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-01T23:56:44.848+08:00  WARN 82692 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-01T23:56:44.855+08:00  INFO 82692 --- [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-01T23:56:45.186+08:00  INFO 82692 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-01T23:56:45.205+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    create table members (
        id bigint generated by default as identity,
        created_at timestamp(6),
        email varchar(255),
        password varchar(255),
        phone varchar(255),
        updated_at timestamp(6),
        username varchar(255),
        primary key (id)
    )
Hibernate: 
    create table members (
        id bigint generated by default as identity,
        created_at timestamp(6),
        email varchar(255),
        password varchar(255),
        phone varchar(255),
        updated_at timestamp(6),
        username varchar(255),
        primary key (id)
    )
2025-06-01T23:56:45.208+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    create table order_items (
        id bigint generated by default as identity,
        price numeric(38,2),
        product_name varchar(255),
        quantity integer,
        order_id bigint,
        product_id bigint,
        primary key (id)
    )
Hibernate: 
    create table order_items (
        id bigint generated by default as identity,
        price numeric(38,2),
        product_name varchar(255),
        quantity integer,
        order_id bigint,
        product_id bigint,
        primary key (id)
    )
2025-06-01T23:56:45.209+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    create table orders (
        id bigint generated by default as identity,
        order_date timestamp(6),
        order_number varchar(255),
        status enum ('CANCELLED','DELIVERED','PENDING','PROCESSING','SHIPPED'),
        total_amount numeric(38,2),
        updated_at timestamp(6),
        member_id bigint,
        primary key (id)
    )
Hibernate: 
    create table orders (
        id bigint generated by default as identity,
        order_date timestamp(6),
        order_number varchar(255),
        status enum ('CANCELLED','DELIVERED','PENDING','PROCESSING','SHIPPED'),
        total_amount numeric(38,2),
        updated_at timestamp(6),
        member_id bigint,
        primary key (id)
    )
2025-06-01T23:56:45.210+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    create table products (
        id bigint generated by default as identity,
        created_at timestamp(6),
        description varchar(255),
        name varchar(255),
        price numeric(38,2),
        stock integer,
        updated_at timestamp(6),
        primary key (id)
    )
Hibernate: 
    create table products (
        id bigint generated by default as identity,
        created_at timestamp(6),
        description varchar(255),
        name varchar(255),
        price numeric(38,2),
        stock integer,
        updated_at timestamp(6),
        primary key (id)
    )
2025-06-01T23:56:45.210+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-06-01T23:56:45.213+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-06-01T23:56:45.214+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    alter table if exists orders 
       add constraint FK2vq7lo4gkknrmghj3rqpqqg6s 
       foreign key (member_id) 
       references members
Hibernate: 
    alter table if exists orders 
       add constraint FK2vq7lo4gkknrmghj3rqpqqg6s 
       foreign key (member_id) 
       references members
2025-06-01T23:56:45.215+08:00  INFO 82692 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-01T23:56:45.357+08:00  INFO 82692 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-01T23:56:45.681+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        members m1_0
Hibernate: 
    select
        count(*) 
    from
        members m1_0
2025-06-01T23:56:45.693+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.700+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.701+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        members
        (created_at, email, password, phone, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Initialized member data
2025-06-01T23:56:45.702+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        products p1_0
Hibernate: 
    select
        count(*) 
    from
        products p1_0
2025-06-01T23:56:45.703+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.704+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.704+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.705+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.705+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (created_at, description, name, price, stock, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Initialized product data
2025-06-01T23:56:45.706+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        members m1_0
Hibernate: 
    select
        count(*) 
    from
        members m1_0
2025-06-01T23:56:45.706+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        products p1_0
Hibernate: 
    select
        count(*) 
    from
        products p1_0
2025-06-01T23:56:45.726+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
2025-06-01T23:56:45.730+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.username=?
2025-06-01T23:56:45.731+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:56:45.732+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:56:45.733+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:56:45.734+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:56:45.734+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.name=?
2025-06-01T23:56:45.737+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:56:45.738+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:56:45.739+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:56:45.742+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.744+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.744+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.747+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:56:45.748+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:56:45.750+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:56:45.750+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:56:45.751+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.751+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.751+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:56:45.752+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:56:45.752+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:56:45.753+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.updated_at 
    from
        products p1_0 
    where
        p1_0.id=?
2025-06-01T23:56:45.753+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        orders
        (member_id, order_date, order_number, status, total_amount, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.753+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.754+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        order_items
        (order_id, price, product_id, product_name, quantity, id) 
    values
        (?, ?, ?, ?, ?, default)
2025-06-01T23:56:45.754+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
2025-06-01T23:56:45.755+08:00 DEBUG 82692 --- [           main] org.hibernate.SQL                        : 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        created_at=?,
        description=?,
        name=?,
        price=?,
        stock=?,
        updated_at=? 
    where
        id=?
Initialized order data
2025-06-01T23:56:45.820+08:00  WARN 82692 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-01T23:56:45.974+08:00  INFO 82692 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-06-01T23:56:46.007+08:00  INFO 82692 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-06-01T23:56:46.015+08:00  INFO 82692 --- [           main] com.example.demo.DemoApplication         : Started DemoApplication in 2.293 seconds (process running for 2.487)
2025-06-01T23:56:49.474+08:00  INFO 82692 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-01T23:56:49.474+08:00  INFO 82692 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-01T23:56:49.475+08:00  INFO 82692 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-06-01T23:56:49.499+08:00 DEBUG 82692 --- [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    offset
        ? rows 
    fetch
        first ? rows only
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-06-01T23:56:49.535+08:00 DEBUG 82692 --- [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:56:49.538+08:00 DEBUG 82692 --- [nio-8080-exec-1] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
2025-06-01T23:58:08.159+08:00 DEBUG 82692 --- [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
Hibernate: 
    select
        o1_0.id,
        o1_0.member_id,
        o1_0.order_date,
        o1_0.order_number,
        o1_0.status,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    where
        o1_0.order_number=?
2025-06-01T23:58:08.165+08:00 DEBUG 82692 --- [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
Hibernate: 
    select
        m1_0.id,
        m1_0.created_at,
        m1_0.email,
        m1_0.password,
        m1_0.phone,
        m1_0.updated_at,
        m1_0.username 
    from
        members m1_0 
    where
        m1_0.id=?
2025-06-01T23:58:08.166+08:00 DEBUG 82692 --- [nio-8080-exec-3] org.hibernate.SQL                        : 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
Hibernate: 
    select
        oi1_0.order_id,
        oi1_0.id,
        oi1_0.price,
        oi1_0.product_id,
        oi1_0.product_name,
        oi1_0.quantity 
    from
        order_items oi1_0 
    where
        oi1_0.order_id=?
